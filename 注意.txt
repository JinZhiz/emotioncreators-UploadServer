注意设置 php.ini 中的 upload_max_filesize、post_max_size、memory_limit。
设置到合理的允许上传文件的大小。

以及 max_execution_time、max_input_time。
设置一下接受上传、下载的最大时间，以免上传或下载失败。

mysql 的 sql 文件在 sql 文件夹里面。
data/config.ini 可以修改 mysql 的连接配置。

config.ini 中 thumbnail 开头的缩略图大小。
image_base64 是将图片以 base64 编码储存。
close_error_report 是关闭 php 自带报错，如果开启，可能导致游戏实际使用时出错，建议只在调试时使用。
version 是游戏的版本。


游戏连接地址，在 emotioncreators/DefaultData/url
里面的 dat 就是连接地址，不过都经过加密。
下面是加解密的代码 (C#)

加密 AES.EncryptAES(bytes, "eromake", "phpaddress")
解密 AES.DecryptAES(bytes, "eromake", "phpaddress");

public static byte[] EncryptAES(byte[] srcData, string pw = "illusion", string salt = "unityunity")
{
	RijndaelManaged rijndaelManaged = new RijndaelManaged();
	rijndaelManaged.KeySize = 128;
	rijndaelManaged.BlockSize = 128;
	byte[] bytes = Encoding.UTF8.GetBytes(salt);
	Rfc2898DeriveBytes rfc2898DeriveBytes = new Rfc2898DeriveBytes(pw, bytes);
	rfc2898DeriveBytes.IterationCount = 1000;
	rijndaelManaged.Key = rfc2898DeriveBytes.GetBytes(rijndaelManaged.KeySize / 8);
	rijndaelManaged.IV = rfc2898DeriveBytes.GetBytes(rijndaelManaged.BlockSize / 8);
	ICryptoTransform cryptoTransform = rijndaelManaged.CreateEncryptor();
	byte[] result = cryptoTransform.TransformFinalBlock(srcData, 0, srcData.Length);
	cryptoTransform.Dispose();
	return result;
}

public static byte[] DecryptAES(byte[] srcData, string pw = "illusion", string salt = "unityunity")
{
	RijndaelManaged rijndaelManaged = new RijndaelManaged();
	rijndaelManaged.KeySize = 128;
	rijndaelManaged.BlockSize = 128;
	byte[] bytes = Encoding.UTF8.GetBytes(salt);
	Rfc2898DeriveBytes rfc2898DeriveBytes = new Rfc2898DeriveBytes(pw, bytes);
	rfc2898DeriveBytes.IterationCount = 1000;
	rijndaelManaged.Key = rfc2898DeriveBytes.GetBytes(rijndaelManaged.KeySize / 8);
	rijndaelManaged.IV = rfc2898DeriveBytes.GetBytes(rijndaelManaged.BlockSize / 8);
	ICryptoTransform cryptoTransform = rijndaelManaged.CreateDecryptor();
	byte[] result = cryptoTransform.TransformFinalBlock(srcData, 0, srcData.Length);
	cryptoTransform.Dispose();
	return result;
}